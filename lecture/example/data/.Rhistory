rm(list=ls())
set.seed(123456)
N<-1000
# Define an observable characteristics
age<-sample(1:4,N, replace = T)
x <- rnorm(N)
# Define Potential Outcomes
y0<- age*2 + 3*age^2 rnorm(N)
y1<- y0 + 2
# Define your treatment here: Whether or not someone participates in the job training program
# is determined by her age and other random variables
D <- as.numeric(0.3*age+rnorm(N)>=2)
# You observe only one of the potential outcomes
y <- D*y1 + (1-D)*y0
data<-as.data.frame(cbind(y,D,age, x))
attach(data)
# Define Potential Outcomes
y0<- age*2 + 3*age^2 + rnorm(N)
y1<- y0 + 2
# Define your treatment here: Whether or not someone participates in the job training program
# is determined by her age and other random variables
D <- as.numeric(0.3*age+rnorm(N)>=2)
# You observe only one of the potential outcomes
y <- D*y1 + (1-D)*y0
data<-as.data.frame(cbind(y,D,age, x))
attach(data)
aggregate(x,list(D),FUN=mean)
aggregate(age,list(D),FUN=mean)
rm(list=ls())
set.seed(123456)
N<-10000
# Define an observable characteristics
age<-sample(1:4,N, replace = T)
x <- rnorm(N)
# Define Potential Outcomes
y0<- age*2 + 3*age^2 + rnorm(N)
y1<- y0 + 2
# Define your treatment here: Whether or not someone participates in the job training program
# is determined by her age and other random variables
D <- as.numeric(0.3*age+rnorm(N)>=2)
# You observe only one of the potential outcomes
y <- D*y1 + (1-D)*y0
data<-as.data.frame(cbind(y,D,age, x))
attach(data)
aggregate(age,list(D),FUN=mean)
aggregate(x,list(D),FUN=mean)
rm(list=ls())
set.seed(123456)
N<-10000
# Define an observable characteristics
age<-sample(1:4,N, replace = T)
x <- rnorm(N)
# Define Potential Outcomes
y0<- age*2 + 3*age^2 + rnorm(N)
y1<- y0 + 2
# Define your treatment here: Whether or not someone participates in the job training program
# is determined by her age and other random variables
D <- as.numeric(0.3*age+rnorm(N)>=2)
# You observe only one of the potential outcomes
y <- D*y1 + (1-D)*y0
data<-as.data.frame(cbind(y,D,age, x))
attach(data)
View(data)
aggregate(age,by=list(D),FUN=mean)
aggregate(y,by=list(D),FUN=mean)
aggregate(y,by=list(D),FUN=mean)[2,2]-aggregate(y,by=list(D),FUN=mean)[1,2]
aggregate(y,by=list(age,D),FUN=mean)
aggregate(y,by=list(age,D),FUN=mean)[5,3]-aggregate(y,by=list(age,D),FUN=mean)[1,3]
aggregate(y,by=list(age,D),FUN=mean)[6,3]-aggregate(y,by=list(age,D),FUN=mean)[2,3]
aggregate(y,by=list(age,D),FUN=mean)[7,3]-aggregate(y,by=list(age,D),FUN=mean)[3,3]
aggregate(y,by=list(age,D),FUN=mean)[8,3]-aggregate(y,by=list(age,D),FUN=mean)[4,3]
# Save the results
ate.group1<-aggregate(y,by=list(age,D),FUN=mean)[5,3]-aggregate(y,by=list(age,D),FUN=mean)[1,3]
ate.group2<-aggregate(y,by=list(age,D),FUN=mean)[6,3]-aggregate(y,by=list(age,D),FUN=mean)[2,3]
ate.group3<-aggregate(y,by=list(age,D),FUN=mean)[7,3]-aggregate(y,by=list(age,D),FUN=mean)[3,3]
ate.group4<-aggregate(y,by=list(age,D),FUN=mean)[8,3]-aggregate(y,by=list(age,D),FUN=mean)[4,3]
# For the entire population, we can calculate the weighted average of each group
# Combine the impact for each group
ate.group<-c(ate.group1,ate.group2,ate.group3,ate.group4)
# Calculate the share for each age group
weights <- prop.table(table(age))
# The average impact for the entire population
ate <- weighted.mean(ate.group, weights)
ate
treat.group <- subset(data, subset = (D==1))
control.group <- subset(data, subset = (D==0))
View(treat.group)
aggregate(control.group$y,by=list(control.group$age),FUN=mean)
control.data<-as.data.frame(aggregate(control.group$y,by=list(control.group$age),FUN=mean))
names(control.data) <- c("age","y0")
View(control.data)
match.data<- merge(x=treat.group, y=control.data, by=c("age"), all= FALSE)
View(match.data)
match.data$treat.effect <- match.data$y - match.data$y0
mean(match.data$treat.effect)
# Method 3: Linear Regression
lm(y ~ D + factor(age),data=data)
set.seed(123456)
Sigma1 <- matrix(c(10,3,3,2),2,2)
Sigma1
x1 <- mvrnorm(n=1000, rep(0, 2), Sigma1)
library(MASS)
Sigma1 <- matrix(c(10,3,3,2),2,2)
Sigma1
x1 <- mvrnorm(n=1000, rep(0, 2), Sigma1)
View(x1)
x2 <- mvrnorm(n=1000, rep(0, 2), Sigma1)
head(x1)
head(x2)
for (i in 1:10){
paste0("x",i) <- mvrnorm(n=1000, rep(0, 2), Sigma1)
}
for (i in 1:10){
paste0("x",i, sep="") <- mvrnorm(n=1000, rep(0, 2), Sigma1)
}
for (i in 1:10){
as.name(paste0("x",i, sep="")) <- mvrnorm(n=1000, rep(0, 2), Sigma1)
}
paste0("x",1)
for (i in 1:10){
paste0("x",i) <- mvrnorm(n=1000, rep(0, 2), Sigma1)
}
for (i in 1:10){
"paste0("x",i)" <- mvrnorm(n=1000, rep(0, 2), Sigma1)
}
?replicate
data(colon)
install.packages("biglasso")
library(biglasso)
data(colon)
View(colon)
data <- as.data.frame(cbind(y,X))
data <- as.data.frame(cbind(colon$y,colon$X))
View(data)
mtcars
amis
data("airmiles")
airmiles
library(carData)
data("Arrests")
View(Arrests)
data("Blackmore")
View(Blackmore)
data("Mroz")
View(Mroz)
data(nswdemo)
data("nswdemo")
data("psid1")
library("DAAG")
install.packages("DAAG")
data("psid1")
data("nswdemo")
data(nswdemo)
library(DAAG)
data(nswdemo)
table(trt)
attach(nswdemo)
table(trt)
knitr::opts_chunk$set(echo = TRUE)
library(DAAG)
data(nswdemo)
library(DAAG)
data <- data(nswdemo)
library(DAAG)
data <- data(nswdemo)
table(age)
prop.table(table(age))
data
library(DAAG)
data(nswdemo)
attach(nswdemo)
table(age)
table(educ)
aggregate(re78, by=list(black))
aggregate(re78, by=list(black), data=data)
aggregate(re78, by=list(black), FUN=mean)
model1 <- lm(re78 ~ factor(black))
summary(model1)
model1 <- lm(re78 ~ factor(black)+0)
summary(model1)
model2 <-  lm(re78 ~ factor(black))
summary(model2)
new <- data.frame(black = c(0,1))
new <- data.frame(black = c(1))
predict(model2, new)
library(DAAG)
data <- data(nswdemo)
attach(data)
library(DAAG)
data <- data(nswdemo)
attach(data)
library(DAAG)
data <- data(nswdemo)
attach(data)
library(DAAG)
data <- data(nswdemo)
library(DAAG)
data <- data(nswdemo)
attach(data)
data
setwd("~/Dropbox/02 teaching/econ5043/08github/lecture/example/data")
write.csv(data, file = "data.csv")
data <- read.csv("data.csv")
write.csv(nswdemo, file = "nswdemo.csv")
data <- read.csv("nswdemo.csv")
library(readr)
dataset <- read_csv(NULL)
View(dataset)
library(readr)
dataset <- read_csv("nswdemo.csv")
View(dataset)
table(age)
summar(re78)
summary(dataset$re78)
summary(dataset$age)
summary(age)
summary(re78)
library(readr)
dataset <- read_csv("nswdemo.csv")
setwd("~/Dropbox/02 teaching/econ5043/08github/lecture/example/data")
library(readr)
dataset <- read.csv("nswdemo.csv")
library(readr)
dataset <- read_csv("nswdemo.csv")
setwd("~/Dropbox/02 teaching/econ5043/08github/lecture/example/data")
library(readr)
dataset <- read_csv("nswdemo.csv")
library(readr)
dataset <- read_csv("nswdemo.csv")
attach(dataset)
dataset <- read.csv("nswdemo.csv")
attach(dataset)
detach(dataset)
dataset <- read.csv("nswdemo.csv")
attach(dataset)
aggregate(re78, by=list(black), FUN=mean)
model1 <- lm(re78 ~ factor(black)+0)
summary(model1)
model2 <-  lm(re78 ~ factor(black))
summary(model2)
new <- data.frame(black = c(1))
predict(model2, new)
predict(model2, new)
library(tidyverse)
prop.table(table(age))
dataset$age.group[age <=26] <- 1
dataset$age.group[age > 26] <- 0
cef <- aggregate(re78, by=list(age.group, black), FUN=mean)
dataset$age.group[age <=26] <- 1
dataset$age.group[age > 26] <- 0
attach(dataset)
cef <- aggregate(re78, by=list(age.group, black), FUN=mean)
cef <- aggregate(re78, by=list(age.group, black), FUN=mean)
cef
cef[4,3]-cef[2,3]
model3 <- lm(re78 ~ factor(black) + factor(age.group)
model3 <- lm(re78 ~ factor(black) + factor(age.group))
model3 <- lm(re78 ~ factor(black) + factor(age.group))
summary(model3)
new <- data.frame(black = c(1), age.group=c(1))
predict(model3, new)
model4 <- lm(re78 ~ factor(black)*factor(age.group))
summary(model4)
model4 <- lm(re78 ~ factor(black)*factor(age.group))
summary(model4)
predict(model4, new)
summary(dataset)
install.packages("FNN")
library(FNN)
test.data <- data.frame(age = age)
mydata <- data.frame(age = c(28))
model5 <- knn.reg(train = test.data, test = mydata, y=re78, k = 2)
library(FNN)
test.data <- data.frame(age = age)
mydata <- data.frame(age = c(28))
model5 <- knn.reg(train = test.data, test = mydata, y=re78, k = 2)
model5
library(FNN)
test.data <- data.frame(age = age)
mydata <- data.frame(age = c(28))
model5 <- knn.reg(train = test.data, test = mydata, y=re78, k = 2)
model5
library(FNN)
test.data <- data.frame(age = age)
mydata <- data.frame(age = c(28))
model5 <- knn.reg(train = test.data, test = mydata, y=re78, k = 2)
model5
library(FNN)
test.data <- data.frame(age = age)
mydata <- data.frame(age = c(28))
model6 <- knn.reg(train = test.data, test = mydata, y=re78, k = 2)
model6
library(np)
model5 <- npreg(re78 ~ age)
# Generate new dataset for prediction
new <- data.frame(age = c(28))
predict(model5, new)
# Generate new dataset for prediction
new <- data.frame(age = c(28))
predict(model5, newdata = new)
